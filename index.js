import TelegramBot from "node-telegram-bot-api";
import moment from "moment";
import dotenv from "dotenv";

dotenv.config();
const token = process.env.TOKEN;

const bot = new TelegramBot(token, { polling: true });

const chatState = {};
const selectedTimes = {};

const myId = 392593561;
// const myId = 486008562;

const onStart = async (chatId) => {
  await bot.sendSticker(
    chatId,
    "https://tlgrm.ru/_/stickers/182/a1e/182a1e53-620d-41ec-937e-c4a1be34aa5d/1.webp"
  );
  await bot.sendMessage(
    chatId,
    `–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö —Ç—Ä–µ–Ω—É–≤–∞–Ω—å! ü•ä \n–î–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω–Ω—è–º –±–æ—Ç–æ–º –í–∏ –º–æ–∂–µ—Ç–µ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—å –º–µ–Ω—é ( /menu) –∞–±–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –∫–æ—Ä–º–∞–Ω–¥–∞–º–∏: \nüëâüèª –©–æ–± –∑–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –æ–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É /addTraining \nüëâüèª –©–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –æ–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É /info  \nüëâüèª –©–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç—Ä–µ–Ω–µ—Ä–∞ –æ–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É /coachInfo \nüìû –ó–≤ º—è–∑–∞—Ç–∏—Å—å –∑ —Ç—Ä–µ–Ω–µ—Ä–æ–º /contact`
  );
};

const start = () => {
  bot.on("message", async (msg) => {
    const text = msg.text;
    const chatId = msg.chat.id;

    if (text === "/start") {
      const username = msg.from.username;

      await bot.sendSticker(
        chatId,
        "https://tlgrm.ru/_/stickers/182/a1e/182a1e53-620d-41ec-937e-c4a1be34aa5d/1.webp"
      );
      return bot.sendMessage(
        chatId,
        `${username}, –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö —Ç—Ä–µ–Ω—É–≤–∞–Ω—å! ü•ä \n–î–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω–Ω—è–º –±–æ—Ç–æ–º –í–∏ –º–æ–∂–µ—Ç–µ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—å –º–µ–Ω—é ( /menu) –∞–±–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –∫–æ—Ä–º–∞–Ω–¥–∞–º–∏: \nüëâüèª –©–æ–± –∑–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –æ–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É /addTraining \nüëâüèª –©–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –æ–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É /info  \nüëâüèª –©–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç—Ä–µ–Ω–µ—Ä–∞ –æ–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É /coachInfo \nüìû –ó–≤ º—è–∑–∞—Ç–∏—Å—å –∑ —Ç—Ä–µ–Ω–µ—Ä–æ–º /contact`
      );
    }

    // ---------------- * MENU BOT ---------------

    if (msg.text == "/menu") {
      await bot.sendMessage(msg.chat.id, `üëáüèª`, {
        reply_markup: {
          keyboard: [
            ["–ó–∞–≥–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è", "–¢—Ä–µ–Ω–µ—Ä"],
            ["–ó–∞–ø–∏—Å–∞—Ç–∏—Å—å –Ω–∞ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è", "–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è"],
          ],
        },
      });
    }

    // ---------------- * INFO ---------------------

    if (text === "/info" || text === "–ó–∞–≥–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è") {
      const address = "–º. –ß–µ—Ä–∫–∞—Å–∏, –≤—É–ª–∏—Ü—è –í º—è—á–µ—Å–ª–∞–≤–∞ –ß–æ—Ä–Ω–æ–≤–æ–ª–∞, 49";
      const phoneNumber = "+380634527251";
      const encryptedUrl = Buffer.from(
        "https://maps.app.goo.gl/pLkEe75VmsjmmUNx8"
      ).toString("base64");

      const message = `–î–æ—Ä–æ–≥–∏–π —É—á–∞—Å–Ω–∏–∫ —Ç—Ä–µ–Ω—É–≤–∞–Ω—å! –ù–∞–≥–∞–¥—É—î–º–æ –≤–∞–º –ø—Ä–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ—Å—Ç—å –≤–∑—è—Ç–∏ –∑ —Å–æ–±–æ—é –∑–º—ñ–Ω–Ω–µ –≤–∑—É—Ç—Ç—è. –Ø–∫—â–æ —É –≤–∞—Å —î –±–æ–∫—Å–µ—Ä—Å—å–∫–µ –∞–±–æ –±–æ—Ä—Ü—ñ–≤—Å—å–∫–µ –≤–∑—É—Ç—Ç—è, –≤–æ–Ω–æ –≤–∞–º –±—É–¥–µ –Ω–∞–π–±—ñ–ª—å—à –∑—Ä—É—á–Ω–∏–º, –∞–ª–µ —Ç–∞–∫–æ–∂ –º–æ–∂–Ω–∞ —Ç—Ä–µ–Ω—É–≤–∞—Ç–∏—Å—è —É –±–æ—Å–æ–Ω—ñ–∂. –ü—Ä–æ—Ç–µ, –≤–∞–∂–ª–∏–≤–æ –ø–∞–º'—è—Ç–∞—Ç–∏, —â–æ –≤–∑–∏–º–∫—É –±–æ—Å–æ–Ω—ñ–∂ –±—É–¥–µ —Ö–æ–ª–æ–¥–Ω–æ, —Ç–æ–º—É —Ä–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –≤–∑—è—Ç–∏ –∑ —Å–æ–±–æ—é –∑–º—ñ–Ω–Ω–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω–µ –≤–∑—É—Ç—Ç—è, –∞ —Ç–∞–∫–æ–∂ –Ω–µ –∑–∞–±—É–≤–∞–π—Ç–µ –ø—Ä–æ –≤–æ–¥—É. –ê–¥—Ä–µ—Å–∞ –∑–∞ —è–∫–æ—é –ø—Ä–æ—Ö–æ–¥—è—Ç—å —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è: [${address}](https://maps.app.goo.gl/pLkEe75VmsjmmUNx8), –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –∑–∞–ª–∏: ${phoneNumber}. –ë–∞–∂–∞—î–º–æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–∏—Ö —Ç–∞ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–∏—Ö —Ç—Ä–µ–Ω—É–≤–∞–Ω—å! –î–ª—è —Ç–æ–≥–æ, —â–æ–± –∑–∞–ø–∏—Å–∞—Ç–∏—Å—å –Ω–∞ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –æ–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É –Ω–∞—Å—Ç—É–ø–Ω—É –∫–æ–º–∞–Ω–¥—É /addTraining`;

      return bot.sendMessage(chatId, message, {
        parse_mode: "Markdown",
        disable_web_page_preview: false,
      });
    }

    // ---------------- * COACH INFO ---------------------

    if (text === "/coachInfo" || text === "–¢—Ä–µ–Ω–µ—Ä") {
      return bot.sendMessage(
        chatId,
        "–¢—Ä–µ–Ω–µ—Ä: –ú–∞–π–¥–∞–∫–æ–≤ –î–º–∏—Ç—Ä–æ, –º–∞–π—Å—Ç–µ—Ä —Å–ø–æ—Ä—Ç—É –£–∫—Ä–∞—ó–Ω–∏ –∑ –±–æ–∫—Å—É, —á–µ–º–ø—ñ–æ–Ω –Ñ–≤—Ä–æ–ø–∏ —Ç–∞ –±–∞–≥–∞—Ç–æ—Ä–∞–∑–æ–≤–∏–π —á–µ–º–ø—ñ–æ–Ω –£–∫—Ä–∞—ó–Ω–∏. –ú–∞—î —Ç—Ä–µ–Ω–µ—Ä—Å—å–∫—É –æ—Å–≤—ñ—Ç—É —Ç–∞ –∑–Ω–∞—á–Ω–∏–π –¥–æ—Å–≤—ñ–¥ —É —Ç—Ä–µ–Ω–µ—Ä—Å—å–∫—ñ–π –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ. –ü—Ä–∞—Ü—é—î —è–∫ –∑ –¥–æ—Ä–æ—Å–ª–∏–º–∏, —Ç–∞–∫ —ñ –∑ –¥—ñ—Ç—å–º–∏."
      );
    }

    // ------------------- * CONTACT  ---------------------
    if (text === "/contact" || text === "–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è") {
      return bot.sendMessage(
        chatId,
        "–í–∏ –º–æ–∂–µ—Ç–µ –∑–≤ º—è–∑–∞—Ç–∏—Å—å –∑—ñ –º–Ω–æ—é —É —Ç–µ–ª–µ–≥—Ä–∞–º @varun_dm"
      );
    }

    // ------------- * KEYBOARD ---------------------

    function generateDateKeyboard() {
      moment.locale("uk");

      const dates = [];
      const keyboard = { inline_keyboard: [] };

      const daysInMonth = moment()
        .startOf("month")
        .add(1, "month")
        .daysInMonth();
      const currentDate = moment().startOf("week").add(1, "week");

      for (let i = 0; i < daysInMonth; i++) {
        const dateText = currentDate.format("DD.MM");
        const callbackData = currentDate
          .format("ddd DD.MM")
          .replace(/\s+/g, "");

        dates.push({ text: dateText, callback_data: `date${callbackData}` });

        currentDate.add(1, "day");
      }

      while (dates.length > 0) {
        keyboard.inline_keyboard.push(dates.splice(0, 7));
      }

      return keyboard;
    }

    //---------------- * /ADD TRAINING –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤–∏–≤–æ–¥—É –¥–∞—Ç–∏ --------//

    if (text === "/addTraining" || text === "–ó–∞–ø–∏—Å–∞—Ç–∏—Å—å –Ω–∞ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è") {
      const keyboard = generateDateKeyboard();

      return bot.sendMessage(chatId, "–û–±–µ—Ä–∏ –¥–∞—Ç—É, –∫–æ–ª–∏ –≤–∞–º –∑—Ä—É—á–Ω–æ:", {
        reply_markup: keyboard,
      });
    }
    if (
      text !== "/menu" &&
      text !== "/addTraining" &&
      text !== "/info" &&
      text !== "/contact" &&
      text !== "–ª–æ—Ö" &&
      text !== "–õ–æ—Ö"
    ) {
      return bot.sendMessage(chatId, "–Ø –≤–∞—Å –Ω–µ —Ä–æ–∑—É–º—ñ—é, –æ–±–µ—Ä—ñ—Ç—å —ñ–Ω—à—É –∫–æ–º–∞–Ω–¥—É");
    }
    if (text.includes("–õ–æ—Ö") || text.includes("–ª–æ—Ö")) {
      return bot.sendMessage(chatId, "–°–∞–º —Ç—ã –ª–æ—Ö");
    }
  });

  //-------- * –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —á–∞—Å—É –ø—Ä–∏ –æ–±—Ä–∞–Ω—ñ–π –¥–∞—Ç—ñ ----------//

  bot.on("callback_query", async (callbackQuery) => {
    const chatId = callbackQuery.message.chat.id;
    const data = callbackQuery.data;
    const user = callbackQuery.from;
    console.log("USER:", user);
    const username = callbackQuery.from.username;
    const firstName = callbackQuery.from.first_name;
    console.log(username);
    console.log(firstName);

    if (data.startsWith("date")) {
      chatState[chatId] = data;

      let timeIntervals = [];

      const dayOfWeekStr = data.substring(7, 9);
      const dayOfWeek = parseInt(dayOfWeekStr, 10);

      if (!isNaN(dayOfWeek)) {
        console.log("Day of week:", dayOfWeek);

        if (dayOfWeek === 3 || dayOfWeek === 4) {
          timeIntervals = [
            "10:00",
            "11:00",
            "12:00",
            "13:00",
            "14:00",
            "15:00",
            "16:00",
            "17:00",
            "18:00",
            "19:00",
          ];
        } else {
          timeIntervals = ["17:00", "18:00", "19:00"];
        }
      } else {
        console.error("Invalid dayOfWeek:", dayOfWeekStr);
        timeIntervals = ["17:00", "18:00", "19:00", "17:00", "18:00", "19:00"];
      }

      const keyboard = {
        inline_keyboard: timeIntervals.map((time) => [
          { text: time, callback_data: `time-${time}` },
        ]),
      };

      return bot.sendMessage(chatId, "–û–±–µ—Ä—ñ—Ç—å —á–∞—Å:", {
        reply_markup: keyboard,
      });
    } else if (data.startsWith("time-")) {
      const selectedDate = chatState[chatId];
      // const newSelectedDate = selectedDate.slice(4);
      const newSelectedDate =
        selectedDate.slice(4, 6) + " " + selectedDate.slice(6);
      const selectedTime = data.replace("time-", "");

      const selectedDateTime = `${newSelectedDate} ${selectedTime}`;

      if (!selectedTimes[selectedDate]) {
        selectedTimes[selectedDate] = [];
      }

      if (selectedTimes[selectedDate].includes(selectedDateTime)) {
        await bot.sendMessage(chatId, `–¶–µ–π —á–∞—Å –≤–∂–µ –∑–∞–π–Ω—è—Ç–∏–π. –û–±–µ—Ä—ñ—Ç—å —ñ–Ω—à–∏–π.`);
      } else {
        selectedTimes[selectedDate].push(selectedDateTime);
        console.log("selectedTimes", selectedTimes);
        console.log("Chosen date array:", selectedDateTime);

        try {
          await bot.sendVideo(
            chatId,
            "https://media.stickerswiki.app/boxing_video/72801.512.mp4",
            {
              caption: `–í–∏ –æ–±—Ä–∞–ª–∏: ${newSelectedDate} ${selectedTime} \n–î—è–∫—É—î–º–æ, –≤–∞—à –∑–∞–ø–∏—Å –ø—Ä–∏–π–Ω—è—Ç–æ ‚ù§Ô∏è`,
            }
          );

          try {
            await bot.sendMessage(
              myId,
              `${username} (${firstName}) –∑–∞–ø–∏—Å–∞–≤—Å—è –Ω–∞ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è —É ${newSelectedDate} –æ(–±) ${selectedTime}`
            );
          } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
          }
        } catch (error) {
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
        }
      }
    }
  });
};

start();
